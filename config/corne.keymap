/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/led/led.h>
&led_strip {
    chain-length = <27>;
};

#include <dt-bindings/led/led.h>

&pinctrl {
    spi1_default: spi1_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
        };
    };

    spi1_sleep: spi1_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
            low-power-enable;
        };
    };
};

&spi1 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi1_default>;
    pinctrl-1 = <&spi1_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <10>; /* arbitrary; change at will */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;

        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};
/ {
    keymap {
        compatible = "zmk,keymap";

        AngelCM {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y      &kp U  &kp I         &kp O    &kp P      &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D         &kp F  &kp G        &kp H      &kp J  &kp K         &kp L    &kp SEMI   &kp LEFT_BRACKET
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N      &kp M  &kp COMMA     &kp DOT  &kp SLASH  &kp ENTER
                                &kp LEFT_ALT  &mo 1  &kp SPACE    &kp SPACE  &mo 2  &kp LEFT_GUI
            >;

            label = "AngelCM";
        };

        Nums {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC           &kp F1  &kp F2  &kp F3        &kp F4     &kp F5             &kp F6     &kp F7   &kp F8    &kp F9  &kp F10  &kp BSPC
&kp LEFT_SHIFT    &kp N1  &kp N2  &kp N3        &kp N4     &kp N5             &kp N6     &kp N7   &kp N8    &kp N9  &kp N0   &kp END
&kp LEFT_CONTROL  &none   &none   &kp CAPS      &kp RA(Q)  &kp PRINTSCREEN    &none      &kp F11  &kp F12   &none   &none    &kp ENTER
                                  &kp LEFT_ALT  &trans     &kp SPACE          &kp SPACE  &mo 3    &kp RALT
            >;

            label = "Nums";
        };

        Symbol {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp PLUS       &kp LS(NUMBER_1)  &kp EQUAL           &kp UNDERSCORE     &kp RA(MINUS)    &kp LS(N3)      &kp LS(N4)    &kp LS(N5)         &kp LS(N6)       &kp RA(APOSTROPHE)  &kp BSPC
&kp LEFT_SHIFT    &kp ASTRK      &kp LPAR          &kp APOSTROPHE      &kp BACKSLASH      &kp LS(N0)       &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW     &kp RIGHT_ARROW  &kp HOME            &kp END
&kp LEFT_CONTROL  &kp GRAVE      &kp LS(GRAVE)     &kp LS(APOSTROPHE)  &kp LS(BACKSLASH)  &kp LS(N7)       &kp LS(N2)      &kp MINUS     &kp RIGHT_BRACKET  &kp RBRC         &kp GRAVE           &kp DELETE
                                                   &kp LGUI            &mo 3              &kp SPACE        &kp RET         &trans        &kp RALT
            >;

            label = "Symbol";
        };

        Media {
            bindings = <
&none           &none          &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD    &none           &none              &none            &none       &none             &none
&bt BT_CLR_ALL  &bt BT_SEL 0   &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &kp C_PLAY_PAUSE  &kp C_MUTE
&out OUT_BLE    &bt BT_DISC 0  &bt BT_DISC 1    &bt BT_DISC 2    &bt BT_DISC 3    &bt BT_DISC 4      &none           &none              &none            &none       &none             &none
                                                &none            &trans           &none              &none           &trans             &none
            >;

            label = "Media";
        };
    };
};
